### FILE TREE (SELECTED)

‚îú‚îÄ view_patient_record
|  ‚îú‚îÄ static
|  |  ‚îú‚îÄ view_patient_record.js (32 lines)
|  |  ‚îú‚îÄ highlight_formatting.js (14 lines)
|  |  ‚îî‚îÄ mermaid_markdown.js (11 lines)
|  ‚îú‚îÄ templates
|  |  ‚îú‚îÄ view_patient_record.html (130 lines)
|  |  ‚îî‚îÄ header.html (8 lines)
|  ‚îî‚îÄ view_patient_routes.py (1 lines)
‚îú‚îÄ main.py (27 lines)


### FILE CONTENTS

FILE: view_patient_record/static/view_patient_record.js
----------------------------------------
// view_patient_record.js
// Main logic for editing the record, collapsing/expanding sections, etc.

document.addEventListener('DOMContentLoaded', () => {
  const editBtn = document.getElementById('edit-btn');
  const toggleButtons = document.querySelectorAll('.toggle-section');
  const sectionContents = document.querySelectorAll('.section-content');

  let isEditing = false;

  // Toggle collapse/expand for each section
  toggleButtons.forEach((btn) => {
    btn.addEventListener('click', () => {
      const parentSection = btn.closest('.collapsible');
      const contentDiv = parentSection.querySelector('.section-content');
      if (contentDiv.style.display === 'none') {
        contentDiv.style.display = 'block';
      } else {
        contentDiv.style.display = 'none';
      }
    });
  });

  // Toggle edit mode for all content sections
  editBtn.addEventListener('click', () => {
    isEditing = !isEditing;
    sectionContents.forEach((sec) => {
      sec.contentEditable = isEditing;
    });
    editBtn.textContent = isEditing ? 'Save' : 'Edit';
  });
});

FILE: view_patient_record/static/highlight_formatting.js
----------------------------------------
// Use Highlight.js to format code blocks in the view_patient_record.html page

// highlight_formatting.js
// Use Highlight.js to format code blocks in the view_patient_record.html page

document.addEventListener('DOMContentLoaded', () => {
  // If highlight.js is loaded via CDN or another script tag, proceed
  if (typeof hljs !== 'undefined') {
    // Find all <pre> or <code> blocks and highlight them
    document.querySelectorAll('pre, code').forEach((block) => {
      hljs.highlightElement(block);
    });
  }
});

FILE: view_patient_record/static/mermaid_markdown.js
----------------------------------------
//  format both plain markdown text and mermaid markdown as needed for view patient record html page

// mermaid_markdown.js
// Format both plain markdown text and mermaid markdown as needed for view_patient_record.html page

document.addEventListener('DOMContentLoaded', () => {
  // If Mermaid is loaded via CDN or otherwise, initialize it.
  if (typeof mermaid !== 'undefined') {
    mermaid.initialize({ startOnLoad: true });
  }
});

FILE: view_patient_record/templates/view_patient_record.html
----------------------------------------
<!-- 

A single-page design with collapsible sections in a logical order:
  1.	Patient Summary (collapsable (Text Box Formatted Markdown Text))
  2.	Real-Time Alerts & Insights (collapsible (Text Box Formatted Markdown Text))
  3.	Interventions / Care Plan (collapsible (Text Box Formatted Markdown Text))
  4.	Timeline / Gantt (collapsible (Text Box Formatted Mermaid Markdown rendered using Mermaid.js))))
  5.	Raw Data (collapsible code viewer at bottom formatted using highlight.js)

-->

<!-- 
view_patient_record.html

A single-page design with collapsible sections in a logical order:
  1. Patient Summary (collapsible - Markdown)
  2. Real-Time Alerts & Insights (collapsible - Markdown)
  3. Interventions / Care Plan (collapsible - Markdown)
  4. Timeline / Gantt (collapsible - Mermaid Markdown)
  5. Raw Data (collapsible code viewer for XML)
-->

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>View Patient Record</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>
  <style>
    body {
      margin-top: 70px; /* leave space for the fixed header */
      font-family: Arial, sans-serif;
    }
    .collapsible {
      border: 1px solid #ccc;
      padding: 10px;
      margin: 10px 0;
    }
    .collapsible h2 {
      margin-top: 0;
    }
    .section-content {
      margin-top: 10px;
    }
    .toggle-section {
      margin-left: 10px;
    }
  </style>
</head>
<body>

  {% include "header.html" %}

  <div style="margin: 20px;">
    <!-- Button to toggle "edit" mode for all sections -->
    <button id="edit-btn">Edit</button>

    <!-- 1. Patient Summary -->
    <section class="collapsible" data-section="patient-summary">
      <h2>Patient Summary</h2>
      <button class="toggle-section">Minimize/Expand</button>
      <div class="section-content" contenteditable="false">
        <!-- Put your markdown text for patient summary here -->
        Lorem ipsum **markdown** sample text.
      </div>
    </section>

    <!-- 2. Real-Time Alerts & Insights -->
    <section class="collapsible" data-section="realtime-alerts">
      <h2>Real-Time Alerts & Insights</h2>
      <button class="toggle-section">Minimize/Expand</button>
      <div class="section-content" contenteditable="false">
        <!-- Put your markdown text for real-time alerts here -->
        Alerts: *No new alerts at this time*.
      </div>
    </section>

    <!-- 3. Interventions / Care Plan -->
    <section class="collapsible" data-section="interventions">
      <h2>Interventions / Care Plan</h2>
      <button class="toggle-section">Minimize/Expand</button>
      <div class="section-content" contenteditable="false">
        <!-- Put your markdown text for interventions here -->
        1. Monitor blood pressure<br />
        2. Continue medication X
      </div>
    </section>

    <!-- 4. Timeline / Gantt (Mermaid Markdown) -->
    <section class="collapsible" data-section="timeline">
      <h2>Timeline / Gantt</h2>
      <button class="toggle-section">Minimize/Expand</button>
      <div class="section-content mermaid" contenteditable="false">
        %% Example mermaid code
        gantt
          dateFormat  YYYY-MM-DD
          title       Chronic Kidney Disease Timeline
          section Diagnostics
          Blood Test          :a1, 2025-03-01, 1d
          Imaging             :a2, 2025-03-02, 1d
          section Treatment
          Medication A        :a3, 2025-03-05, 7d
          Dialysis            :a4, 2025-04-01, 30d
      </div>
    </section>

    <!-- 5. Raw Data (XML) -->
    <section class="collapsible" data-section="raw-data">
      <h2>Raw Data</h2>
      <button class="toggle-section">Minimize/Expand</button>
      <pre class="section-content" contenteditable="false">
<MedicalRecord>
  <Patient>
    <Name>John Doe</Name>
    <Condition>Chronic Kidney Disease</Condition>
    <LastUpdated>2025-03-21</LastUpdated>
  </Patient>
</MedicalRecord>
      </pre>
    </section>
  </div>

  <!-- Include the custom JS files for highlighting, Mermaid, and interactive features -->
  <script src="{{ url_for('view_patient_record.static', filename='highlight_formatting.js') }}"></script>
  <script src="{{ url_for('view_patient_record.static', filename='mermaid_markdown.js') }}"></script>
  <script src="{{ url_for('view_patient_record.static', filename='view_patient_record.js') }}"></script>
</body>
</html>

FILE: view_patient_record/templates/header.html
----------------------------------------
<!-- there should be a simple header that goes along the top of the page and stays fixed andp title for the website: üè• Chronic Kidney Insights Viewer -->

<!-- header.html -->
<!-- there should be a simple header that goes along the top of the page and stays fixed and a title for the website: üè• Chronic Kidney Insights Viewer -->

<header style="position: fixed; top: 0; width: 100%; background: #f8f8f8; padding: 10px; border-bottom: 1px solid #ccc;">
  <h1>üè• Chronic Kidney Insights Viewer</h1>
</header>

FILE: view_patient_record/view_patient_routes.py
----------------------------------------


FILE: main.py
----------------------------------------
from flask import Flask, Blueprint, render_template

# Create a Blueprint for the "view_patient_record" module
view_patient_record_bp = Blueprint(
    'view_patient_record',
    __name__,
    template_folder='templates',
    static_folder='static'
)

# Route for displaying the patient record page
@view_patient_record_bp.route('/view')
def show_patient_record():
    return render_template('view_patient_record.html')

# Initialize your main Flask app
app = Flask(__name__)

# Register the blueprint with a URL prefix, e.g. "/patient"
app.register_blueprint(view_patient_record_bp, url_prefix='/patient')

@app.route('/')
def index():
    return 'Hello from Flask!'

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)

